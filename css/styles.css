/* GENERAL */

/* fonts */
@font-face {
    font-family: "Inter";
    src: url("../fonts/static/Inter-Regular.ttf") format("truetype");
    font-weight: bold;
}
  

/* HTML / BODY */
html, body{
    margin: 0;
    box-sizing: border-box;
}

html {
	scroll-behavior: smooth;
    height: 100%;
}

@media screen and (prefers-reduced-motion: reduce) {
	html {
		scroll-behavior: auto;
	}
}

body{
    min-height: 100%;
    font-family: "Inter", sans-serif;
    /* TODO : bug avec la font, à régler */

    /*  clamp() permet de définir une taille variable
        ainsi qu'une borne min et max.
        Ici on aura donc un padding horizontal
        de 8% de la largeur de la fenêtre (8vw).
        Cette valeur ne pourra pas excéder ni 10px, ni 150px 
    */
    padding : 90px clamp(10px, 8vw, 150px);
    /* padding-bottom: 0px; */

    position: relative;
}

/* Serge Bouchardon */
.sbouch{
    width: 170px;
    height: 148px;
    overflow: hidden;

    position: absolute;
    right: 30px;
    bottom: 0;
    display: block;
}
.sbouch > .img {
    width: 100%;
    height: 100%;
    background-image: url('../medias/serge_footer.png');
    background-repeat: no-repeat;
    background-size: contain;
    transform: translateY(70%);

    transition: transform cubic-bezier(.7, -0.08, .35, .9) .3s;

}

.sbouch >.img:hover {
    transform: translateY(0);
}



/* titres */
h1{
    font-size: 40px;
    font-weight: bold;
    line-height: 30px;
    margin-bottom: 100px;
    margin-top: 0;
}
h1 > span{
    font-size: 24px;
    font-weight: normal;
}

/* liste */
ul{
    margin: 0;
    padding: 0;
}


/* navigation (menu) */
nav{
    text-align: center;
    margin-bottom: 300px;
}
nav ul{
    display: inline-flex;
    justify-content: center;
    flex-direction: row;
    flex-wrap: wrap;

    background-color: black;
    list-style: none;

    padding: 15px 50px;
    border-radius: 999px;
}
nav li{
    transition: transform .3s ease-in-out;
}
nav li:hover{
    flex-grow: 1.2;
    transform: scale(1.2);
}
nav li a{
    color: white;
    text-decoration: none;
    margin-inline: 20px;
    font-size: 24px;
    position: relative;
    line-height: 40px;
}

/* bouton */
.btn{
    font-size: 24px;
    font-size: clamp(16px, 2vw, 24px);
    line-height: 29px;
    white-space: nowrap;
    text-align: center;
    color: black;
    text-decoration: none;
    padding: clamp(25px, 10%, 50px) clamp(25px, 10%, 85px);
    /*  border-radius: 999px permet d'avoir cet effet "pilule" 
        999px est une valeur arbitraire énorme pour maximiser l'effet
        info : ne pas utiliser 100% ! Ca ne rend pas pareil */
    border-radius: 999px;

    background: linear-gradient(360deg, #B0B0B0 0%, rgba(226, 226, 226, 0) 100%);
    transition: 0.3s;
}
.btn:hover{
    font-weight: bold;
    filter: drop-shadow(0px 10px 25px rgba(0, 0, 0, 0.25));
}

.btn::after {
    /*  Permet d'éviter que le bouton change de taille au survol */

    /*  En gros le pseudo-élément permet de "réserver" 
        l'espace horizontal du texte en gras.
        On charge le texte ici en gras puis on le cache.
        Pour bien comprendre, jouer avec l'inspecteur.
     */

    /*  Ref : 
        https://stackoverflow.com/questions/5687035/css-bolding-some-text-without-changing-its-containers-size 
    */
    display: block;
    content: attr(title);
    font-weight: bold;
    height: 0;
    color: transparent;
    overflow: hidden;
    visibility: hidden;
}


/* back to top */
.back_to_top{
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 100;
}

